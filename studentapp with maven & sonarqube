pipeline {
    agent { label "agent10" }

    environment {
        SONARQUBE_SCANNER = tool name: 'SonarQube Scanner', type: 'hudson.plugins.sonar.Son sonarqubearRunnerInstallation'
        SONAR_HOST_URL = 'http://your-sonarqube-server:9000'
        SONAR_AUTH_TOKEN = credentials('your-sonarqube-token-id')
    }

    stages {
        stage("Cloning repo") {
            steps {
                sh '''
                git clone https://github.com/tejal57/studentapp-code.git
                '''
            }
        }
        stage("Install Apache") {
            steps {
                sh '''
                sudo wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.86/bin/apache-tomcat-9.0.86.tar.gz
                sudo tar -xzvf apache-tomcat-9.0.86.tar.gz
                '''
            }
        }
        stage("Install Maven") {
            steps {
                sh  '''
                sudo apt update
                sudo apt install maven -y
                '''
            }
        }
        stage("Build Artifact") {
            steps {
                sh  '''
                sudo chown -R ubuntu:ubuntu /home/ubuntu/*
                cd /home/ubuntu/workspace/project10/studentapp-code
                sudo mvn clean
                sudo mvn package
                '''
            }
        }
        stage("SonarQube Analysis") {
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh '''
                    ${SONARQUBE_SCANNER}/bin/sonar-scanner \
                      -Dsonar.projectKey=studentapp \
                      -Dsonar.sources=. \
                      -Dsonar.host.url=${SONAR_HOST_URL} \
                      -Dsonar.login=${SONAR_AUTH_TOKEN}
                    '''
                }
            }
        }
        stage("Move WAR file to Apache") {
            steps {
                sh '''
                sudo mv /home/ubuntu/workspace/project10/studentapp-code/target/*.war /home/ubuntu/workspace/project10/apache-tomcat-9.0.86/webapps/student.war
                '''
            }
        }
        stage("Starting Catalina") {
            steps {
                sh '''
                sudo bash /home/ubuntu/workspace/project10/apache-tomcat-9.0.86/bin/catalina.sh stop
                sudo bash /home/ubuntu/workspace/project10/apache-tomcat-9.0.86/bin/catalina.sh start
                '''
            }
        }
    }
    post {
        always {
            cleanWs()
        }
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
